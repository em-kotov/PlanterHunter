//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/FarmerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @FarmerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FarmerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FarmerInput"",
    ""maps"": [
        {
            ""name"": ""Farmer"",
            ""id"": ""78819839-eae6-4467-adba-43a6b510c815"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""df3ec3cd-8e25-4327-a69e-af969539d705"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Plant"",
                    ""type"": ""Button"",
                    ""id"": ""1da06b8a-4502-4a17-b0c3-302f0ebbad98"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""12572902-a2a7-4c78-9caf-23b58e55d273"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c807abf9-00a6-4516-9c6d-fc9e3deaab6e"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5a93cc78-0e54-46a0-b456-ef0486816675"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b87f7611-e803-4b80-bd15-55a239c1a6e5"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f302fa8b-13cf-4dd2-a447-e70f67dae42e"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f3030844-9f5d-4b23-8e0b-67a76ae14bfe"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6bbed8d7-e486-45a7-a006-5988f965b64c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5d78735e-3af5-4a59-8e70-f06c0212d221"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fa4a430d-12d1-45b6-a1ee-4f776c3dde43"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c076056-67c7-4d0b-b084-a8c678447f15"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c4d35e55-b981-43e9-baf2-3e81934ff570"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Plant"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9db95b69-7034-4ae1-bea9-22096a6ed75e"",
                    ""path"": ""<VirtualMouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Plant"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Farmer
        m_Farmer = asset.FindActionMap("Farmer", throwIfNotFound: true);
        m_Farmer_Move = m_Farmer.FindAction("Move", throwIfNotFound: true);
        m_Farmer_Plant = m_Farmer.FindAction("Plant", throwIfNotFound: true);
    }

    ~@FarmerInput()
    {
        UnityEngine.Debug.Assert(!m_Farmer.enabled, "This will cause a leak and performance issues, FarmerInput.Farmer.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Farmer
    private readonly InputActionMap m_Farmer;
    private List<IFarmerActions> m_FarmerActionsCallbackInterfaces = new List<IFarmerActions>();
    private readonly InputAction m_Farmer_Move;
    private readonly InputAction m_Farmer_Plant;
    public struct FarmerActions
    {
        private @FarmerInput m_Wrapper;
        public FarmerActions(@FarmerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Farmer_Move;
        public InputAction @Plant => m_Wrapper.m_Farmer_Plant;
        public InputActionMap Get() { return m_Wrapper.m_Farmer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FarmerActions set) { return set.Get(); }
        public void AddCallbacks(IFarmerActions instance)
        {
            if (instance == null || m_Wrapper.m_FarmerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FarmerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Plant.started += instance.OnPlant;
            @Plant.performed += instance.OnPlant;
            @Plant.canceled += instance.OnPlant;
        }

        private void UnregisterCallbacks(IFarmerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Plant.started -= instance.OnPlant;
            @Plant.performed -= instance.OnPlant;
            @Plant.canceled -= instance.OnPlant;
        }

        public void RemoveCallbacks(IFarmerActions instance)
        {
            if (m_Wrapper.m_FarmerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFarmerActions instance)
        {
            foreach (var item in m_Wrapper.m_FarmerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FarmerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FarmerActions @Farmer => new FarmerActions(this);
    public interface IFarmerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnPlant(InputAction.CallbackContext context);
    }
}
